var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.404,1,1.614]],["body/modules/AppModule.html",[0,2.021,1,2.757,2,1.241,3,1.241,4,1.659,5,1.659,6,1.241,7,1.659,8,1.659,9,1.971,10,1.971,11,2.398,12,0.051,13,2.336,14,1.659,15,1.659,16,0.48,17,0.409,18,0.409,19,2.444,20,2.774,21,1.369,22,2.336,23,1.086,24,2.444,25,3.44,26,3.44,27,1.427,28,2.336,29,2.444,30,2.324,31,1.241,32,2.008,33,2.444,34,2.444,35,2.444,36,2.444,37,3.44,38,2.703,39,2.444,40,2.444,41,2.444,42,2.444,43,1.241,44,2.444,45,2.444,46,2.444,47,2.444,48,3.44,49,2.444,50,2.444,51,0.48,52,0.117,53,2.774,54,1.971,55,1.659,56,1.971,57,0.642,58,1.971,59,1.427,60,2.444,61,2.444,62,2.444,63,2.444,64,0.031,65,0.031]],["title/controllers/AuthController.html",[66,1.614,67,1.614]],["body/controllers/AuthController.html",[12,0.05,16,0.394,17,0.335,18,0.335,21,1.325,23,0.89,51,0.394,52,0.096,57,0.934,58,1.614,59,1.168,64,0.027,65,0.027,66,1.168,67,1.738,68,1.614,69,1.614,70,2.002,71,2.002,72,0.394,73,1.738,74,3.936,75,2.977,76,2.401,77,2.977,78,3.174,79,1.536,80,2.002,81,2.297,82,2.002,83,2.977,84,2.002,85,2.075,86,2.075,87,1.034,88,1.387,89,1.511,90,2.002,91,1.998,92,2.002,93,2.075,94,2.002,95,3.936,96,3.936,97,2.002,98,2.002,99,3.174,100,2.002,101,1.869,102,3.554,103,2.002,104,2.002,105,2.002,106,1.738,107,2.002,108,1.614,109,2.977,110,1.387,111,1.359,112,2.002,113,2.977,114,2.977,115,2.002,116,1.359,117,1.614,118,1.359,119,1.614,120,0.89,121,2.002,122,2.002,123,2.977,124,2.002,125,1.998,126,2.002,127,1.016,128,2.002,129,2.002,130,2.002,131,2.002,132,2.002,133,2.002,134,2.002]],["title/modules/AuthModule.html",[0,1.404,11,1.404]],["body/modules/AuthModule.html",[0,2.057,2,1.283,3,1.283,4,1.715,5,1.715,6,1.283,7,2.751,8,1.715,11,2.423,12,0.051,13,2.39,14,1.715,15,1.715,16,0.497,17,0.423,18,0.423,20,2.037,21,1.472,22,2.39,23,1.123,30,2.559,31,1.283,51,0.497,52,0.121,64,0.032,65,0.032,67,2.365,68,2.839,110,1.862,111,1.715,125,1.283,135,2.037,136,2.037,137,2.526,138,2.526,139,2.526,140,1.715,141,2.526,142,1.715,143,1.787,144,2.526,145,2.526,146,2.526,147,1.715,148,2.526,149,2.526,150,1.283,151,1.283,152,2.526,153,1.715,154,2.526,155,2.526,156,1.475,157,2.037,158,2.526]],["title/injectables/AuthService.html",[110,1.079,159,1.614]],["body/injectables/AuthService.html",[12,0.051,16,0.211,17,0.18,18,0.18,21,1.276,22,2.271,23,0.477,27,0.626,28,1.595,30,2.079,31,0.545,43,1.401,51,0.211,52,0.052,57,1.195,59,1.611,64,0.017,65,0.017,72,0.211,73,1.057,76,1.895,79,1.572,81,2.274,85,2.274,86,2.274,87,1.178,88,1.52,89,1.401,91,1.401,93,2.274,99,0.865,101,1.227,106,2.351,110,0.706,117,0.865,118,0.728,119,0.865,120,0.477,125,1.9,140,0.728,143,0.919,150,1.978,151,1.808,153,0.728,156,0.626,157,0.865,159,1.057,160,1.073,161,0.865,162,1.811,163,2.943,164,1.811,165,1.811,166,1.811,167,1.811,168,2.761,169,1.811,170,1.46,171,1.073,172,2.761,173,3.561,174,2.35,175,1.073,176,1.811,177,1.073,178,2.487,179,1.811,180,2.698,181,1.073,182,1.811,183,1.073,184,1.811,185,1.073,186,1.372,187,1.811,188,1.073,189,1.073,190,1.811,191,1.073,192,1.073,193,1.073,194,1.073,195,1.073,196,1.811,197,1.073,198,2.698,199,1.595,200,1.073,201,1.073,202,1.073,203,1.073,204,1.073,205,1.073,206,0.626,207,1.073,208,0.626,209,1.073,210,1.073,211,1.073,212,1.073,213,1.811,214,1.8,215,1.073,216,1.46,217,1.595,218,1.37,219,1.073,220,1.073,221,1.073,222,1.811,223,2.35,224,2.226,225,1.073,226,1.811,227,1.811,228,1.073,229,1.073,230,1.073,231,1.073,232,1.073,233,1.811,234,1.073,235,1.073,236,1.073,237,0.865,238,1.073,239,0.865,240,1.073,241,1.073,242,1.073,243,1.073,244,1.073,245,1.073,246,1.811,247,1.073,248,1.073]],["title/classes/CreateUserDto.html",[52,0.133,101,1.229]],["body/classes/CreateUserDto.html",[12,0.05,16,0.495,17,0.421,18,0.421,21,1.056,51,0.495,52,0.169,57,1.311,64,0.032,65,0.032,72,0.495,78,3.712,79,1.796,87,1.209,88,1.707,93,2.05,101,1.56,120,1.118,217,2.746,218,1.797,249,0.982,250,3.845,251,1.709,252,1.204,253,2.361,254,2.361,255,2.783,256,2.517,257,2.517,258,4.603,259,2.517,260,2.517,261,4.603,262,2.517,263,1.709,264,1.709,265,2.517,266,2.517,267,3.512,268,2.517,269,2.03,270,2.517]],["title/classes/HashHelper.html",[52,0.133,206,1.614]],["body/classes/HashHelper.html",[12,0.05,16,0.416,17,0.354,18,0.354,21,0.636,51,0.416,52,0.102,53,3.922,55,1.436,57,1.383,64,0.028,65,0.028,72,0.416,73,1.81,79,1.432,81,2.782,85,1.81,86,1.81,87,0.964,88,1.21,106,2.782,108,2.96,125,1.574,150,2.283,163,2.492,206,1.81,214,1.81,249,0.825,252,1.063,263,1.436,264,1.436,271,1.705,272,3.67,273,3.1,274,3.1,275,2.5,276,2.115,277,3.1,278,5.011,279,2.115,280,3.1,281,4.042,282,4.042,283,3.1,284,3.1,285,3.1,286,2.115,287,3.1,288,3.1,289,2.5,290,2.115,291,2.115,292,2.115]],["title/classes/JwtStrategy.html",[52,0.133,293,1.877]],["body/classes/JwtStrategy.html",[12,0.051,16,0.467,17,0.398,18,0.398,21,1.407,23,1.055,30,2.49,31,1.206,32,2.288,43,1.206,51,0.467,52,0.114,57,0.624,59,1.968,64,0.031,65,0.031,72,0.467,73,1.968,79,1.315,81,1.386,85,1.968,86,1.968,87,1.12,88,1.315,93,2.49,106,1.968,110,1.826,111,1.613,120,1.055,125,1.206,142,1.613,147,2.661,150,1.99,151,1.206,153,1.613,163,1.613,170,2.719,178,1.915,180,2.719,198,1.915,214,1.386,224,1.915,249,0.927,293,2.289,294,1.915,295,2.719,296,3.371,297,3.371,298,2.375,299,2.375,300,3.371,301,2.375,302,2.375,303,2.375,304,2.375,305,1.915,306,3.371,307,2.375,308,2.375,309,2.375,310,2.375,311,2.375]],["title/classes/LoginDto.html",[52,0.133,91,1.404]],["body/classes/LoginDto.html",[12,0.05,16,0.691,17,0.588,18,0.588,21,1.316,51,0.691,52,0.169,64,0.04,65,0.04,91,2.222,101,1.561,116,2.385,118,2.385,151,2.222,216,2.833,217,2.972,218,1.945,249,1.371,295,3.53,312,2.833,313,4.377,314,3.513]],["title/interfaces/SecurityConfig.html",[143,1.404,315,1.404]],["body/interfaces/SecurityConfig.html",[12,0.049,16,0.65,17,0.554,18,0.554,51,0.65,55,3.148,57,1.407,64,0.038,65,0.038,72,0.65,87,1.218,143,2.139,156,2.85,252,1.444,315,1.679,316,2.245,317,2.666,318,3.938,319,3.938]],["title/interfaces/SelectUser.html",[315,1.404,320,1.877]],["body/interfaces/SelectUser.html",[12,0.045,16,0.66,17,0.562,18,0.562,38,3.44,51,0.66,64,0.039,65,0.039,72,0.66,88,1.915,89,2.492,218,2.182,251,2.278,252,1.458,253,2.866,254,2.866,255,2.866,315,1.704,316,2.278,320,2.888,321,2.706]],["title/classes/TokenDto.html",[52,0.133,186,1.614]],["body/classes/TokenDto.html",[12,0.048,16,0.702,17,0.597,18,0.597,51,0.702,52,0.171,57,1.318,64,0.04,65,0.04,72,0.702,79,1.725,87,1.161,186,2.58,237,3.873,239,3.873,249,1.392,252,1.515,322,2.878,323,3.569,324,3.569]],["title/classes/UserResponseDto.html",[52,0.133,208,1.614]],["body/classes/UserResponseDto.html",[12,0.049,16,0.574,17,0.489,18,0.489,21,0.878,51,0.574,52,0.14,57,1.357,64,0.035,65,0.035,72,0.574,79,1.891,87,1.273,88,1.816,89,2.217,120,1.298,208,2.268,218,1.941,249,1.139,252,1.332,253,2.549,254,2.549,255,2.91,325,4.02,326,2.355,327,2.92,328,2.92,329,2.92,330,2.92,331,2.92]],["title/coverage.html",[332,2.543]],["body/coverage.html",[6,1.292,12,0.049,18,0.426,32,1.486,43,1.292,52,0.23,64,0.032,65,0.032,66,1.486,67,1.486,69,2.053,87,0.669,91,1.292,101,1.131,110,0.993,127,1.292,143,1.292,159,1.486,161,2.053,186,1.486,199,1.728,206,1.486,208,1.486,250,2.053,251,2.403,271,2.053,293,1.728,294,2.053,312,2.053,315,1.797,317,2.053,320,1.728,321,2.053,322,2.053,325,2.053,326,2.053,332,1.728,333,2.545,334,2.545,335,2.545,336,5.319,337,2.545,338,2.545,339,4.069,340,4.785,341,3.539,342,2.053,343,4.622,344,2.545,345,2.053,346,3.281,347,2.053,348,2.545,349,2.545,350,2.053,351,2.545,352,2.545,353,2.053,354,2.545,355,2.545,356,2.545]],["title/dependencies.html",[3,1.684,357,1.873]],["body/dependencies.html",[3,1.536,12,0.051,23,1.344,27,1.766,28,2.7,31,1.536,52,0.191,64,0.036,65,0.036,116,2.054,120,1.344,140,2.054,142,2.054,147,2.054,269,2.439,289,2.439,305,3.207,358,4.444,359,3.025,360,3.025,361,3.025,362,3.025,363,3.025,364,3.025,365,3.977,366,3.025,367,3.025,368,3.025,369,3.025,370,3.025,371,3.025,372,3.025,373,3.025,374,3.025,375,3.025,376,3.025,377,3.025,378,3.025,379,3.025,380,3.025,381,3.025,382,3.025,383,3.025,384,3.025]],["title/miscellaneous/functions.html",[385,1.356,386,2.675]],["body/miscellaneous/functions.html",[6,2.585,12,0.044,64,0.044,65,0.044,72,0.804,353,3.296,385,2.386,386,3.296,387,4.087]],["title/index.html",[72,0.457,388,2.322,389,2.322]],["body/index.html",[12,0.049,17,0.448,64,0.033,65,0.033,127,1.359,332,1.817,390,2.677,391,2.677,392,3.664,393,2.677,394,2.677,395,2.677,396,2.677,397,2.677,398,2.677,399,3.369,400,2.677,401,2.677,402,2.677,403,2.677,404,4.178,405,4.975,406,2.677,407,2.159,408,2.677,409,4.859,410,2.677,411,2.677,412,3.664,413,2.677,414,2.677,415,2.677,416,2.677,417,3.664,418,3.664,419,2.677,420,2.677,421,2.677,422,3.664,423,3.664,424,2.677,425,2.677,426,2.677,427,2.677,428,2.677,429,2.159,430,2.677,431,2.677,432,2.677,433,2.677,434,2.677,435,2.677,436,2.677,437,2.677,438,2.677,439,2.677,440,2.159,441,2.677,442,2.677,443,2.677,444,2.677,445,2.677,446,2.677,447,2.159]],["title/modules.html",[2,1.902]],["body/modules.html",[1,2.343,2,2.038,11,2.038,12,0.043,64,0.043,65,0.043,429,3.828,448,4.747,449,4.747,450,4.747]],["title/overview.html",[451,3.021]],["body/overview.html",[0,1.738,1,2.887,2,1.738,3,1.738,4,2.324,5,2.324,6,1.738,7,2.324,8,2.324,9,2.761,10,2.761,11,2.587,12,0.045,13,2.924,14,2.324,15,2.324,64,0.039,65,0.039,66,1.998,110,1.839,135,2.761,136,2.761,159,1.998,249,1.336,316,2.324,451,2.761,452,4.307,453,4.307,454,3.424]],["title/properties.html",[252,1.137,357,1.873]],["body/properties.html",[12,0.049,64,0.043,65,0.043,127,2.038,252,1.376,440,3.237,447,3.237,455,4.014,456,4.014,457,4.014]],["title/miscellaneous/variables.html",[385,1.356,458,2.675]],["body/miscellaneous/variables.html",[12,0.051,27,1.421,32,2.003,38,3.203,43,1.236,54,1.964,56,2.767,57,1.043,64,0.031,65,0.031,72,0.479,87,1.133,89,1.236,127,1.742,150,1.236,151,1.742,156,1.421,199,2.33,214,1.421,218,1.082,253,1.421,254,1.421,255,1.421,263,3.087,264,3.087,275,1.964,318,1.964,319,1.964,342,1.964,345,1.964,346,1.964,347,2.767,350,2.767,385,1.421,399,2.767,407,2.767,458,1.964,459,2.435,460,3.973,461,2.435,462,3.431,463,2.435,464,2.435,465,2.435,466,2.435,467,2.435,468,2.435,469,2.435,470,3.431,471,2.435,472,2.435,473,2.435,474,3.431,475,2.435,476,2.435,477,2.435,478,2.435,479,2.435,480,3.431,481,2.435,482,2.435,483,2.435,484,2.435,485,2.435]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":456,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":453,"title":{},"body":{"overview.html":{}}}],["1.7.4",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":275,"title":{},"body":{"classes/HashHelper.html":{},"miscellaneous/variables.html":{}}}],["10.0.3",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["10.3.1",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":452,"title":{},"body":{"overview.html":{}}}],["2/4",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["2m",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["5.8.1",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":454,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{}}}],["amazing",{"_index":430,"title":{},"body":{"index.html":{}}}],["apiconsumes",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('application/x",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicreatedresponse",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation({description",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":407,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":398,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.apiversion",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule.port",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":67,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication'})@apiconsumes('application/x",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":440,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":110,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.name",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":431,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('invalid",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt",{"_index":289,"title":{},"body":{"classes/HashHelper.html":{},"dependencies.html":{}}}],["bcrypt.compare(plain",{"_index":292,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcrypt.hash(str",{"_index":290,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcryptsaltorround",{"_index":318,"title":{},"body":{"interfaces/SecurityConfig.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":283,"title":{},"body":{"classes/HashHelper.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":450,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":448,"title":{},"body":{"modules.html":{}}}],["build",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":393,"title":{},"body":{"index.html":{}}}],["built",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":52,"title":{"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["common/constants/constants",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare",{"_index":273,"title":{},"body":{"classes/HashHelper.html":{}}}],["compare(plain",{"_index":277,"title":{},"body":{"classes/HashHelper.html":{}}}],["compares",{"_index":280,"title":{},"body":{"classes/HashHelper.html":{}}}],["compression",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.get('jwt_access_secret",{"_index":310,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["config/config",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["config/config.interface",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["configservice.get('jwt_access_secret",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('security",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["const",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["constructor(authservice",{"_index":298,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["constructor(prisma",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["controller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('auth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["cors",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":332,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["createuser",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(payload",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":101,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["createuserdto})@post",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["data",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dbml",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["decorators",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{}}}],["default",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{}}}],["delete",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":408,"title":{},"body":{"index.html":{}}}],["document",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/create",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/token.dto",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/user",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":419,"title":{},"body":{"index.html":{}}}],["ecommerce",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":394,"title":{},"body":{"index.html":{}}}],["email",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"interfaces/SelectUser.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encrypt",{"_index":274,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypt(str",{"_index":285,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypted",{"_index":278,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypts",{"_index":287,"title":{},"body":{"classes/HashHelper.html":{}}}],["equal",{"_index":284,"title":{},"body":{"classes/HashHelper.html":{}}}],["error",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":404,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/SecurityConfig.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["express",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":295,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/LoginDto.html":{}}}],["extractjwt",{"_index":303,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":309,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{}}}],["findallusers",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["finduser",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["finduser(@param('id",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["finduser(id",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["firstname",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/SelectUser.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":392,"title":{},"body":{"index.html":{}}}],["function",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":386,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateaccesstoken",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateaccesstoken(payload",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["generaterefreshtoken",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["generaterefreshtoken(payload",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokens",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokens(payload",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["generator",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["get('user/:id",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":388,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser(id",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["grow",{"_index":426,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashhelper",{"_index":206,"title":{"classes/HashHelper.html":{}},"body":{"injectables/AuthService.html":{},"classes/HashHelper.html":{},"coverage.html":{}}}],["hashhelper.compare(password",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashhelper.encrypt(payload.password",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["helmet",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":437,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":444,"title":{},"body":{"index.html":{}}}],["id",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/SelectUser.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["id(s",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/UserResponseDto.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":72,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{}}}],["inject",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":159,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":403,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":406,"title":{},"body":{"index.html":{}}}],["interface",{"_index":315,"title":{"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{}},"body":{"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":316,"title":{},"body":{"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["internalservererrorexception('failed",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdefined",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isdefined()@isemail",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isdefined()@isenum(role",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(role",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["isstring",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":433,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":308,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["jwtmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":293,"title":{"classes/JwtStrategy.html":{}},"body":{"classes/JwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":441,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/SelectUser.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["license",{"_index":447,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":423,"title":{},"body":{"index.html":{}}}],["literal",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["load",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["logger('prismamiddleware",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["logger(message",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["logging",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggingmiddleware",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(undefined",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":91,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loglevel",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["logmessage",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["middlewares",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":385,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":422,"title":{},"body":{"index.html":{}}}],["mode",{"_index":412,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":436,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":442,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["nest",{"_index":399,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nestframework",{"_index":446,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["new",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":391,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(`no",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(`user",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/HashHelper.html":{},"interfaces/SecurityConfig.html":{}}}],["object",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":424,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"interfaces/SelectUser.html":{},"classes/UserResponseDto.html":{}}}],["options",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["overview",{"_index":451,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":357,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"classes/HashHelper.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["passport",{"_index":305,"title":{},"body":{"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":302,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":296,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["password",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["passwordvalid",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["payload.email.tolowercase",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["picktype",{"_index":314,"title":{},"body":{"classes/LoginDto.html":{}}}],["picktype(createuserdto",{"_index":313,"title":{},"body":{"classes/LoginDto.html":{}}}],["plain",{"_index":282,"title":{},"body":{"classes/HashHelper.html":{}}}],["please",{"_index":434,"title":{},"body":{"index.html":{}}}],["port",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["prisma",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["prisma/client",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/JwtStrategy.html":{},"classes/UserResponseDto.html":{},"dependencies.html":{}}}],["prismamodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["prismamodule.forroot",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaservice",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaserviceoptions",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["process.env.api_version",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":414,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":390,"title":{},"body":{"index.html":{}}}],["project",{"_index":425,"title":{},"body":{"index.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["properties",{"_index":252,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"properties.html":{}}}],["provided",{"_index":281,"title":{},"body":{"classes/HashHelper.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["query",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["query.executiontime}ms",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["query.model}.${query.action",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["queryinfo",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":435,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["reflect",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["refreshin",{"_index":319,"title":{},"body":{"interfaces/SecurityConfig.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{}}}],["register",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":402,"title":{},"body":{"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["response.dto",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":326,"title":{},"body":{"classes/UserResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:4",{"_index":329,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:5",{"_index":327,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:6",{"_index":328,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:7",{"_index":330,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:8",{"_index":331,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["results",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["returns",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{}}}],["role",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/SelectUser.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":409,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":272,"title":{},"body":{"classes/HashHelper.html":{}}}],["scalable",{"_index":395,"title":{},"body":{"index.html":{}}}],["secret",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["security",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["securityconfig",{"_index":143,"title":{"interfaces/SecurityConfig.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/SecurityConfig.html":{},"coverage.html":{}}}],["securityconfig.expiresin",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["select",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["selectuser",{"_index":320,"title":{"interfaces/SelectUser.html":{}},"body":{"interfaces/SelectUser.html":{},"coverage.html":{}}}],["server",{"_index":396,"title":{},"body":{"index.html":{}}}],["setdescription(description",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle(title",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion(apiversion",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":397,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/SecurityConfig.html":{},"interfaces/SelectUser.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"index.html":{}}}],["sponsors",{"_index":428,"title":{},"body":{"index.html":{}}}],["src/.../config.ts",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:103",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:48",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:66",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:99",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":312,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/select",{"_index":321,"title":{},"body":{"interfaces/SelectUser.html":{},"coverage.html":{}}}],["src/auth/dto/token.dto.ts",{"_index":322,"title":{},"body":{"classes/TokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/token.dto.ts:2",{"_index":323,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/auth/dto/token.dto.ts:3",{"_index":324,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/auth/dto/user",{"_index":325,"title":{},"body":{"classes/UserResponseDto.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":294,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:19",{"_index":301,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":299,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/common/constants/constants.ts",{"_index":342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config.interface",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/config/config.interface.ts",{"_index":317,"title":{},"body":{"interfaces/SecurityConfig.html":{},"coverage.html":{}}}],["src/config/config.ts",{"_index":345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger.config.ts",{"_index":346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/hash.helper.ts",{"_index":271,"title":{},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["src/helpers/hash.helper.ts:10",{"_index":286,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/helpers/hash.helper.ts:20",{"_index":279,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/helpers/hash.helper.ts:3",{"_index":276,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/main.ts",{"_index":353,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":410,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":413,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":415,"title":{},"body":{"index.html":{}}}],["started",{"_index":389,"title":{"index.html":{}},"body":{}}],["starter",{"_index":401,"title":{},"body":{"index.html":{}}}],["statements",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/HashHelper.html":{}}}],["stay",{"_index":438,"title":{},"body":{"index.html":{}}}],["str",{"_index":288,"title":{},"body":{"classes/HashHelper.html":{}}}],["strategy",{"_index":304,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["string",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"interfaces/SecurityConfig.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":307,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["support",{"_index":429,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":449,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.loadpluginmetadata(metadata",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('api",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":418,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":421,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":420,"title":{},"body":{"index.html":{}}}],["tests",{"_index":417,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":427,"title":{},"body":{"index.html":{}}}],["this.authservice.createuser(data",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuser(id",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getusers",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(data",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload.userid",{"_index":311,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["this.configservice.get('jwt_refresh_secret",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('nest.apiversion",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["this.configservice.get('nest.port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["this.configservice.get('security",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generateaccesstoken(payload",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generaterefreshtoken(payload",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generatetokens",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logging.log(message",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.create",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findmany",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findunique",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.salt",{"_index":291,"title":{},"body":{"classes/HashHelper.html":{}}}],["throw",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["title",{"_index":350,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendto",{"_index":186,"title":{"classes/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{},"coverage.html":{}}}],["touch",{"_index":439,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SelectUser.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":445,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"classes/JwtStrategy.html":{},"interfaces/SecurityConfig.html":{},"classes/TokenDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":400,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":306,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["unit",{"_index":416,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":457,"title":{},"body":{"properties.html":{}}}],["urlencoded",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["urlencoded')@apicreatedresponse({type",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["urlencoded')@post('login",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["usefactory",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["user",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/JwtStrategy.html":{}}}],["user.dto",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["user.dto.ts",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/SelectUser.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_select",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["userresponsedto",{"_index":208,"title":{"classes/UserResponseDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{},"coverage.html":{}}}],["validate",{"_index":297,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validate(payload",{"_index":300,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validateuser",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(userid",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/HashHelper.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":458,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":455,"title":{},"body":{"properties.html":{}}}],["void",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["watch",{"_index":411,"title":{},"body":{"index.html":{}}}],["website",{"_index":443,"title":{},"body":{"index.html":{}}}],["www",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["yarn",{"_index":405,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":432,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { PrismaModule, QueryInfo, loggingMiddleware } from 'nestjs-prisma';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport config from './config/config';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [config],\n      isGlobal: true,\n      cache: true,\n    }),\n    PrismaModule.forRoot({\n      isGlobal: true,\n      prismaServiceOptions: {\n        middlewares: [\n          loggingMiddleware({\n            logger: new Logger('PrismaMiddleware'),\n            logLevel: 'log',\n            logMessage: (query: QueryInfo) =>\n              `[Prisma Query] ${query.model}.${query.action} +${query.executionTime}ms`,\n          }),\n        ],\n      },\n    }),\n    AuthModule,\n  ],\n})\nexport class AppModule {\n  static port: number;\n  static apiVersion: string;\n  constructor(private readonly configService: ConfigService) {\n    AppModule.port = this.configService.get('nest.port');\n    AppModule.apiVersion = this.configService.get('nest.apiVersion');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAllUsers\n                            \n                            \n                                    \n                                findUser\n                            \n                            \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'User authentication'})@ApiConsumes('application/x-www-form-urlencoded')@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('application/x-www-form-urlencoded')@ApiCreatedResponse({type: CreateUserDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport {\n  ApiConsumes,\n  ApiCreatedResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { User } from '@prisma/client';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @ApiConsumes('application/x-www-form-urlencoded')\n  @ApiCreatedResponse({ type: CreateUserDto })\n  @Post()\n  register(@Body() data: CreateUserDto): Promise {\n    return this.authService.createUser(data);\n  }\n\n  @ApiOperation({ description: 'User authentication' })\n  @ApiConsumes('application/x-www-form-urlencoded')\n  @Post('login')\n  login(@Body() data: LoginDto) {\n    return this.authService.login(data);\n  }\n\n  @Get()\n  findAllUsers() {\n    return this.authService.getUsers();\n  }\n\n  @Get('user/:id')\n  findUser(@Param('id') id: string) {\n    return this.authService.getUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigService } from '@nestjs/config';\nimport { SecurityConfig } from 'src/config/config.interface';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      useFactory: async (configService: ConfigService) => {\n        const securityConfig = configService.get('security');\n        return {\n          secret: configService.get('JWT_ACCESS_SECRET'),\n          signOptions: {\n            expiresIn: securityConfig.expiresIn,\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, Logger],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Private\n                                generateAccessToken\n                            \n                            \n                                    Private\n                                generateRefreshToken\n                            \n                            \n                                generateTokens\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService, configService: ConfigService, logging: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logging\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(payload: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRefreshToken(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateTokens\n                        \n                    \n                \n            \n            \n                \ngenerateTokens(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TokenDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n            \n                \n                        \n                    logger(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(undefined: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateUser\n                        \n                    \n                \n            \n            \n                \nvalidateUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { USER_SELECT } from '../common/constants/constants';\nimport { SecurityConfig } from '../config/config.interface';\nimport {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { PrismaService } from 'nestjs-prisma';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from '@prisma/client';\nimport { TokenDto } from './dto/token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { LoginDto } from './dto/login.dto';\nimport { HashHelper } from '@helpers';\nimport { UserResponseDto } from './dto/user-response.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly logging: Logger,\n  ) {}\n\n  private logger(message: string) {\n    this.logging.log(message, AuthService.name);\n  }\n\n  async createUser(payload: CreateUserDto): Promise {\n    const hashedPassword = await HashHelper.encrypt(payload.password);\n    const create = {\n      ...payload,\n      password: hashedPassword,\n      email: payload.email.toLowerCase(),\n    };\n\n    const user = await this.prisma.user.create({ data: create });\n\n    delete user.password;\n\n    return user;\n  }\n\n  async login({ email, password }: LoginDto): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`No user found for email: ${email}`);\n    }\n\n    const passwordValid = await HashHelper.compare(password, user.password);\n\n    if (!passwordValid) {\n      throw new BadRequestException('Invalid password');\n    }\n\n    return this.generateTokens({ userId: user.id });\n  }\n\n  getUsers(): Promise {\n    return this.prisma.user.findMany({\n      select: USER_SELECT,\n    });\n  }\n\n  async getUser(id: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id },\n      select: USER_SELECT,\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User with ID(s): ${id} not found`);\n    }\n\n    return user;\n  }\n\n  validateUser(userId: string): Promise {\n    return this.prisma.user.findUnique({ where: { id: userId } });\n  }\n\n  generateTokens(payload: { userId: string }): TokenDto {\n    try {\n      return {\n        accessToken: this.generateAccessToken(payload),\n        refreshToken: this.generateRefreshToken(payload),\n      };\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to generate token');\n    }\n  }\n  private generateAccessToken(payload: { userId: string }): string {\n    return this.jwtService.sign(payload);\n  }\n\n  private generateRefreshToken(payload: { userId: string }): string {\n    const securityConfig = this.configService.get('security');\n    return this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_SECRET'),\n      expiresIn: securityConfig.expiresIn,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Default value : 'USER'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport { IsDefined, IsEmail, IsEnum, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsDefined()\n  @IsEmail()\n  email: string;\n\n  @IsDefined()\n  password: string;\n\n  @IsString()\n  firstName?: string;\n\n  @IsString()\n  lastName?: string;\n\n  @IsDefined()\n  @IsEnum(Role)\n  role: Role = 'USER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHelper.html":{"url":"classes/HashHelper.html","title":"class - HashHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/hash.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                salt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                compare\n                            \n                            \n                                    Static\n                                    Async\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/helpers/hash.helper.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(plain: string, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/helpers/hash.helper.ts:20\n                        \n                    \n\n\n            \n                \n                        Compares encrypted and provided string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                plain\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise Returns Boolean if provided string and encrypted are equal\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                        \n                    encrypt(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/helpers/hash.helper.ts:10\n                        \n                    \n\n\n            \n                \n                        Encrypts plain string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise returns encrypted\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from 'bcrypt';\nexport class HashHelper {\n  private static salt = 10;\n\n  /**\n   * Encrypts plain string\n   * @param str\n   * @returns Promise returns encrypted\n   */\n  static async encrypt(str: string): Promise {\n    return await bcrypt.hash(str, this.salt);\n  }\n\n  /**\n   * Compares encrypted and provided string\n   * @param plain {string}\n   * @param encrypted {string}\n   * @returns Promise Returns Boolean if provided string and encrypted are equal\n   */\n  static async compare(plain: string, encrypted: string): Promise {\n    return await bcrypt.compare(plain, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './auth.service';\nimport { UnauthorizedException } from '@nestjs/common';\nimport { User } from '@prisma/client';\n\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly authService: AuthService,\n    readonly config: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secret: config.get('JWT_ACCESS_SECRET'),\n    });\n  }\n\n  async validate(payload: { userId: string }): Promise {\n    const user = await this.authService.validateUser(payload.userId);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(CreateUserDto, [\n  'email',\n  'password',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class LoginDto extends PickType(CreateUserDto, [\n  'email',\n  'password',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SecurityConfig.html":{"url":"interfaces/SecurityConfig.html","title":"interface - SecurityConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SecurityConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bcryptSaltOrRound\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshIn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcryptSaltOrRound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcryptSaltOrRound:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SecurityConfig {\n  expiresIn: string;\n  refreshIn: string;\n  bcryptSaltOrRound: string | number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectUser.html":{"url":"interfaces/SelectUser.html","title":"interface - SelectUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/select-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SelectUser {\n  id: true;\n  email: true;\n  firstName?: true;\n  lastName?: true;\n  role: true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenDto.html":{"url":"classes/TokenDto.html","title":"class - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TokenDto {\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponseDto.html":{"url":"classes/UserResponseDto.html","title":"class - UserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\n\nexport class UserResponseDto {\n  id: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/select-user.dto.ts\n            \n            interface\n            SelectUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/token.dto.ts\n            \n            class\n            TokenDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/user-response.dto.ts\n            \n            class\n            UserResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            USER_SELECT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SecurityConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            description\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            SwaggerConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            title\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/hash.helper.ts\n            \n            class\n            HashHelper\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.1\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.3.1\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.1\n        \n            @nestjs/swagger : ^7.2.0\n        \n            @prisma/client : ^5.8.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.4\n        \n            helmet : ^7.1.0\n        \n            nestjs-prisma : ^0.22.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-dbml-generator : ^0.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config.ts)\n                        \n                        \n                            description   (src/.../swagger.config.ts)\n                        \n                        \n                            SwaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            title   (src/.../swagger.config.ts)\n                        \n                        \n                            USER_SELECT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  nest: {\n    port: process.env.PORT,\n    apiVersion: process.env.API_VERSION,\n  },\n\n  cors: {\n    enabled: true,\n  },\n\n  security: {\n    expiresIn: '2m',\n    refreshIn: '7d',\n    bcryptSaltOrRound: 10,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Ecommerce built with NestJS'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SwaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  app: INestApplication,\n  apiVersion: string,\n) => {\n  await SwaggerModule.loadPluginMetadata(metadata);\n  const options = new DocumentBuilder()\n    .setTitle(title)\n    .setDescription(description)\n    .setVersion(apiVersion)\n    .build();\n\n  const document = SwaggerModule.createDocument(app, options);\n\n  SwaggerModule.setup('api', app, document);\n}\n                    \n                \n\n            \n                \n                    Setup swagger in the application\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Nest Ecommerce'\n                    \n                \n\n\n        \n    \n\n    src/common/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: true,\n  email: true,\n  firstName: true,\n  lastName: true,\n  role: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
